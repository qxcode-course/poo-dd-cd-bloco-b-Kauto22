{
    "patches": [
        {
            "label": "2025-10-26_16-45-49",
            "content": "@@ -586,405 +586,4 @@\n utos\n-%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def __str__(self):%0A        return f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22%0A    %0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def getPotencia(self):%0A        return self.__potencia%0A    %0A    def __str__(self):%0A        return f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22\n",
            "lines": "21"
        },
        {
            "label": "2025-10-26_16-49-33",
            "content": "@@ -987,406 +987,4 @@\n a%7D)%22\n-%0A    %0A            print(f%22usado %7Bself.__minutos_usados%7D minutos, notebook descarregou%22)%0A                    self.__ligado = False%0A                    break%0A            elif self.__carregador:%0A                # Apenas com carregador, notebook n%C3%A3o gasta carga%0A                self.__minutos_usados += minutos%0A                minutos = 0%0A            else:%0A                print(%22erro: notebook desligado%22)\n",
            "lines": "37"
        },
        {
            "label": "2025-10-26_16-50-22",
            "content": "@@ -989,17 +989,404 @@\n )%22%0A    %0A    \n-%0A\n     \n+    print(f%22usado %7Bself.__minutos_usados%7D minutos, notebook descarregou%22)%0A                    self.__ligado = False%0A                    break%0A            elif self.__carregador:%0A                # Apenas com carregador, notebook n%C3%A3o gasta carga%0A                self.__minutos_usados += minutos%0A                minutos = 0%0A            else:%0A                print(%22erro: notebook desligado%22)\n",
            "lines": "47"
        },
        {
            "label": "2025-10-26_16-50-35",
            "content": "@@ -1002,1933 +1002,4 @@\n     \n-class Notebook:%0A        def __init__(self):%0A            self.__ligado = False%0A            self.__bateria: Bateria %7C None = None%0A            self.__carregador: Carregador %7C None = None%0A            self.__minutos_usados = 0%0A%0A        def ligar(self):%0A            if self.__ligado:%0A                return%0A            if (self.__bateria and self.__bateria.getCarga() %3E 0) or self.__carregador:%0A                self.__ligado = True%0A                print(%22notebook ligado%22)%0A            else:%0A                print(%22n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A        def desligar(self):%0A            if self.__ligado:%0A                self.__ligado = False%0A                print(%22notebook desligado%22)%0A%0A        def usar(self, minutos: int):%0A            if not self.__ligado:%0A                print(%22fail: notebook desligado%22)%0A                return%0A            %0A            while minutos %3E 0:%0A                if self.__bateria and self.__bateria.getCarga() %3E 0 and self.__carregador:%0A                    # Usando e carregando ao mesmo tempo%0A                    self.__bateria.carregar(self.__carregador.getPotencia(), 1)%0A                    self.__minutos_usados += 1%0A                    minutos -= 1%0A                elif self.__bateria and self.__bateria.getCarga() %3E 0:%0A                    usados = self.__bateria.usar(1)%0A                    self.__minutos_usados += usados%0A                    minutos -= usados%0A                    if usados == 0:%0A                        print(f%22usado %7Bself.__minutos_usados%7D minutos, notebook descarregou%22)%0A                        self.__ligado = False%0A                        break%0A                elif self.__carregador:%0A                    # Apenas com carregador, notebook n%C3%A3o gasta carga%0A                    self.__minutos_usados += minutos%0A                    minutos = 0%0A                else:%0A                    print(%22erro: notebook desligado%22)%0A                    self.__ligado = False%0A                    break\n",
            "lines": "40"
        },
        {
            "label": "2025-10-26_16-56-33",
            "content": "@@ -1945,32 +1945,89 @@\n f.__carregador:%0A\n+                    # Usando e carregando ao mesmo tempo%0A\n                 \n@@ -2090,16 +2090,16 @@\n a(), 1)%0A\n-\n         \n@@ -2621,32 +2621,102 @@\n f.__carregador:%0A\n+                    # Apenas com carregador, notebook n%C3%A3o gasta carga%0A\n                 \n@@ -2894,32 +2894,32 @@\n _ligado = False%0A\n+\n                 \n@@ -2931,666 +2931,4 @@\n reak\n-%0A%0A        %0A        def setBateria(self, bateria: Bateria):%0A            self.__bateria = bateria%0A%0A        def rmBateria(self):%0A            if self.__bateria:%0A                temp = self.__bateria%0A                print(f%22bateria removida%22)%0A                self.__bateria = None%0A                return temp%0A            else:%0A                print(%22fail: sem bateria%22)%0A                return None%0A            %0A        def setCarregador(self, carregador: Carregador):%0A            if self.__carregador:%0A                print(%22fail: carregador j%C3%A1 conectado%22)%0A            else:%0A                self.__carregador = carregador%0A%0A        def rmCarregador(self):%0A            \n",
            "lines": "87"
        },
        {
            "label": "2025-10-26_17-01-49",
            "content": "@@ -3466,273 +3466,4 @@\n     \n-if self.__carregador:%0A                temp = self.__carregador%0A                print(f%22carregador removido%22)%0A                self.__carregador = None%0A                return temp%0A            else:%0A                print(%22fail: sem carregador%22)%0A                return None\n",
            "lines": "108"
        },
        {
            "label": "2025-10-26_17-02-17",
            "content": "@@ -3735,397 +3735,4 @@\n None\n-%0A            %0A        def mostrar(self):%0A            status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A            parts = %5Bf%22Status: %7Bstatus%7D%22%5D%0A            parts.append(f%22Bateria: %7Bself.__bateria%7D%22 if self.__bateria else %22Bateria: Nenhuma%22)%0A            parts.append(f%22Carregador: %7Bself.__carregador%7D%22 if self.__carregador else %22Carregador: Desconectado%22)%0A            print(%22, %22.join(parts))\n",
            "lines": "115"
        },
        {
            "label": "2025-10-26_17-03-07",
            "content": "@@ -42,17 +42,16 @@\n acidade:\n- \n int):%0A  \n@@ -174,17 +174,16 @@\n __carga%0A\n-%0A\n     def \n@@ -228,32 +228,36 @@\n lf.__capacidade%0A\n+    \n %0A    def usar(se\n@@ -477,16 +477,24 @@\n  usados%0A\n+        \n %0A    def\n@@ -498,24 +498,25 @@\n def carregar\n+ \n (self, poten\n@@ -748,24 +748,28 @@\n pacidade%7D)%22%0A\n+    \n %0A%0Aclass Carr\n@@ -901,32 +901,36 @@\n self.__potencia%0A\n+    \n %0A    def __str__\n@@ -984,18 +984,30 @@\n ncia%7D)%22%0A\n-%0A%0A\n+    %0A    %0A    \n class No\n@@ -1014,24 +1014,28 @@\n tebook:%0A    \n+ \n+   \n def __init__\n@@ -1034,32 +1034,36 @@\n __init__(self):%0A\n+    \n         self.__l\n@@ -1076,32 +1076,36 @@\n = False%0A        \n+    \n self.__bateria: \n@@ -1126,32 +1126,36 @@\n  = None%0A        \n+  \n+  \n self.__carregado\n@@ -1182,32 +1182,36 @@\n  = None%0A        \n+    \n self.__minutos_u\n@@ -1221,24 +1221,28 @@\n os = 0%0A%0A    \n+ \n+   \n def ligar(se\n@@ -1246,32 +1246,36 @@\n (self):%0A        \n+   \n+ \n if self.__ligado\n@@ -1288,23 +1288,31 @@\n         \n+    \n return%0A\n+    \n         \n@@ -1379,32 +1379,36 @@\n f.__carregador:%0A\n+    \n             self\n@@ -1428,32 +1428,36 @@\n rue%0A            \n+    \n print(%22notebook \n@@ -1465,38 +1465,46 @@\n igado%22)%0A        \n+   \n+ \n else:%0A\n+    \n             prin\n@@ -1532,24 +1532,28 @@\n igar%22)%0A%0A    \n+ \n+   \n def desligar\n@@ -1552,32 +1552,36 @@\n desligar(self):%0A\n+    \n         if self.\n@@ -1594,32 +1594,36 @@\n do:%0A            \n+    \n self.__ligado = \n@@ -1632,32 +1632,36 @@\n lse%0A            \n+  \n+  \n print(%22notebook \n@@ -1673,24 +1673,28 @@\n gado%22)%0A%0A    \n+  \n+  \n def usar(sel\n@@ -1719,16 +1719,20 @@\n         \n+ \n+   \n if not s\n@@ -1753,35 +1753,39 @@\n             \n+   \n+ \n print(%22\n-erro\n+fail\n : notebook d\n@@ -1787,32 +1787,36 @@\n ook desligado%22)%0A\n+    \n             retu\n@@ -1818,17 +1818,33 @@\n  return%0A\n-%0A\n+            %0A    \n         \n@@ -1858,24 +1858,28 @@\n inutos %3E 0:%0A\n+    \n             \n@@ -1961,57 +1961,8 @@\n     \n-            # Usando e carregando ao mesmo tempo%0A\n     \n@@ -2041,32 +2041,36 @@\n                 \n+    \n self.__minutos_u\n@@ -2088,32 +2088,36 @@\n                 \n+    \n minutos -= 1%0A   \n@@ -2117,32 +2117,36 @@\n = 1%0A            \n+ \n+   \n elif self.__bate\n@@ -2180,24 +2180,28 @@\n arga() %3E 0:%0A\n+    \n             \n@@ -2244,32 +2244,36 @@\n                 \n+    \n self.__minutos_u\n@@ -2296,32 +2296,36 @@\n                 \n+  \n+  \n minutos -= usado\n@@ -2342,16 +2342,20 @@\n         \n+    \n if usado\n@@ -2358,24 +2358,28 @@\n sados == 0:%0A\n+    \n             \n@@ -2468,32 +2468,36 @@\n                 \n+   \n+ \n self.__ligado = \n@@ -2518,24 +2518,28 @@\n             \n+    \n break%0A      \n@@ -2536,32 +2536,36 @@\n eak%0A            \n+  \n+  \n elif self.__carr\n@@ -2580,70 +2580,8 @@\n     \n-            # Apenas com carregador, notebook n%C3%A3o gasta carga%0A\n     \n@@ -2633,32 +2633,36 @@\n                 \n+    \n minutos = 0%0A    \n@@ -2661,38 +2661,46 @@\n = 0%0A            \n+   \n+ \n else:%0A\n+    \n                 \n@@ -2741,32 +2741,36 @@\n                 \n+    \n self.__ligado = \n@@ -2767,32 +2767,36 @@\n _ligado = False%0A\n+    \n                 \n@@ -2802,16 +2802,29 @@\n  break%0A%0A\n+        %0A    \n     def \n@@ -2859,32 +2859,36 @@\n teria):%0A        \n+    \n self.__bateria =\n@@ -2897,24 +2897,28 @@\n ateria%0A%0A    \n+   \n+ \n def rmBateri\n@@ -2926,32 +2926,36 @@\n (self):%0A        \n+    \n if self.__bateri\n@@ -2961,32 +2961,36 @@\n ia:%0A            \n+ \n+   \n temp = self.__ba\n@@ -2995,16 +2995,20 @@\n bateria%0A\n+    \n         \n@@ -3042,32 +3042,36 @@\n a%22)%0A            \n+    \n self.__bateria =\n@@ -3080,32 +3080,36 @@\n one%0A            \n+  \n+  \n return temp%0A    \n@@ -3104,38 +3104,46 @@\n rn temp%0A        \n+    \n else:%0A\n+    \n             prin\n@@ -3169,32 +3169,36 @@\n a%22)%0A            \n+   \n+ \n return None%0A%0A   \n@@ -3185,33 +3185,49 @@\n     return None%0A\n+            \n %0A\n+    \n     def setCarre\n@@ -3263,32 +3263,36 @@\n gador):%0A        \n+   \n+ \n if self.__carreg\n@@ -3289,32 +3289,36 @@\n f.__carregador:%0A\n+    \n             prin\n@@ -3352,38 +3352,46 @@\n ctado%22)%0A        \n+ \n+   \n else:%0A\n+    \n             self\n@@ -3418,16 +3418,20 @@\n egador%0A%0A\n+    \n     def \n@@ -3450,32 +3450,36 @@\n (self):%0A        \n+  \n+  \n if self.__carreg\n@@ -3476,32 +3476,36 @@\n f.__carregador:%0A\n+    \n             temp\n@@ -3529,32 +3529,36 @@\n dor%0A            \n+ \n+   \n print(f%22carregad\n@@ -3575,32 +3575,36 @@\n o%22)%0A            \n+   \n+ \n self.__carregado\n@@ -3616,32 +3616,36 @@\n one%0A            \n+    \n return temp%0A    \n@@ -3640,32 +3640,36 @@\n rn temp%0A        \n+ \n+   \n else:%0A          \n@@ -3662,32 +3662,36 @@\n se:%0A            \n+   \n+ \n print(%22fail: sem\n@@ -3708,32 +3708,36 @@\n r%22)%0A            \n+    \n return None%0A%0A   \n@@ -3732,17 +3732,33 @@\n rn None%0A\n-%0A\n+            %0A    \n     def \n@@ -3764,32 +3764,36 @@\n  mostrar(self):%0A\n+    \n         status =\n@@ -3840,24 +3840,28 @@\n do%22%0A        \n+ \n+   \n parts = %5Bf%22S\n@@ -3878,16 +3878,20 @@\n atus%7D%22%5D%0A\n+    \n         \n@@ -3975,32 +3975,36 @@\n nhuma%22)%0A        \n+    \n parts.append(f%22C\n@@ -4093,24 +4093,28 @@\n o%22)%0A        \n+  \n+  \n print(%22, %22.j\n@@ -4128,378 +4128,4 @@\n ts))\n-%0A%0A%0A# --- TESTE R%C3%81PIDO ---%0Anotebook = Notebook()%0Anotebook.mostrar()       # Desligado, sem bateria e carregador%0Anotebook.ligar()          # n%C3%A3o foi poss%C3%ADvel ligar%0Anotebook.usar(10)         # erro%0Abateria = Bateria(50)%0Anotebook.setBateria(bateria)%0Anotebook.mostrar()%0Anotebook.ligar()%0Anotebook.mostrar()%0Anotebook.usar(30)%0Anotebook.mostrar()%0Anotebook.usar(30)%0Anotebook.mostrar()\n",
            "lines": "122"
        },
        {
            "label": "2025-10-26_17-03-37",
            "content": "@@ -3881,8 +3881,380 @@\n arts))%0A%0A\n+%0A# --- TESTE R%C3%81PIDO ---%0Anotebook = Notebook()%0Anotebook.mostrar()       # Desligado, sem bateria e carregador%0Anotebook.ligar()          # n%C3%A3o foi poss%C3%ADvel ligar%0Anotebook.usar(10)         # erro%0Abateria = Bateria(50)%0Anotebook.setBateria(bateria)%0Anotebook.mostrar()%0Anotebook.ligar()%0Anotebook.mostrar()%0Anotebook.usar(30)%0Anotebook.mostrar()%0Anotebook.usar(30)%0Anotebook.mostrar()\n",
            "lines": "140"
        },
        {
            "label": "2025-10-26_17-04-13",
            "content": "class Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade = capacidade\n        self.__carga = capacidade\n\n    def getCarga(self):\n        return self.__carga\n\n    def getCapacidade(self):\n        return self.__capacidade\n\n    def usar(self, minutos: int):\n        if self.__carga >= minutos:\n            self.__carga -= minutos\n            return minutos\n        else:\n            usados = self.__carga\n            self.__carga = 0\n            return usados\n\n    def carregar(self, potencia: int, minutos: int):\n        self.__carga += potencia * minutos\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def __str__(self):\n        return f\"({self.__carga}/{self.__capacidade})\"\n\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n\n    def getPotencia(self):\n        return self.__potencia\n\n    def __str__(self):\n        return f\"(Pot\u00eancia {self.__potencia})\"\n\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado = False\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n        self.__minutos_usados = 0\n\n    def ligar(self):\n        if self.__ligado:\n            return\n        if (self.__bateria and self.__bateria.getCarga() > 0) or self.__carregador:\n            self.__ligado = True\n            print(\"notebook ligado\")\n        else:\n            print(\"n\u00e3o foi poss\u00edvel ligar\")\n\n    def desligar(self):\n        if self.__ligado:\n            self.__ligado = False\n            print(\"notebook desligado\")\n\n    def usar(self, minutos: int):\n        if not self.__ligado:\n            print(\"erro: notebook desligado\")\n            return\n\n        while minutos > 0:\n            if self.__bateria and self.__bateria.getCarga() > 0 and self.__carregador:\n                # Usando e carregando ao mesmo tempo\n                self.__bateria.carregar(self.__carregador.getPotencia(), 1)\n                self.__minutos_usados += 1\n                minutos -= 1\n            elif self.__bateria and self.__bateria.getCarga() > 0:\n                usados = self.__bateria.usar(1)\n                self.__minutos_usados += usados\n                minutos -= usados\n                if usados == 0:\n                    print(f\"usado {self.__minutos_usados} minutos, notebook descarregou\")\n                    self.__ligado = False\n                    break\n            elif self.__carregador:\n                # Apenas com carregador, notebook n\u00e3o gasta carga\n                self.__minutos_usados += minutos\n                minutos = 0\n            else:\n                print(\"erro: notebook desligado\")\n                self.__ligado = False\n                break\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria\n\n    def rmBateria(self):\n        if self.__bateria:\n            temp = self.__bateria\n            print(f\"bateria removida\")\n            self.__bateria = None\n            return temp\n        else:\n            print(\"fail: sem bateria\")\n            return None\n\n    def setCarregador(self, carregador: Carregador):\n        if self.__carregador:\n            print(\"fail: carregador j\u00e1 conectado\")\n        else:\n            self.__carregador = carregador\n\n    def rmCarregador(self):\n        if self.__carregador:\n            temp = self.__carregador\n            print(f\"carregador removido\")\n            self.__carregador = None\n            return temp\n        else:\n            print(\"fail: sem carregador\")\n            return None\n\n    def mostrar(self):\n        status = \"Ligado\" if self.__ligado else \"Desligado\"\n        parts = [f\"Status: {status}\"]\n        parts.append(f\"Bateria: {self.__bateria}\" if self.__bateria else \"Bateria: Nenhuma\")\n        parts.append(f\"Carregador: {self.__carregador}\" if self.__carregador else \"Carregador: Desconectado\")\n        print(\", \".join(parts))\n\n",
            "lines": "125"
        }
    ]
}